version: "3"

networks:
  # 代理专用网络
  traefik:
    name: traefik
  # grafana组件用网络
  grafana: # TODO: 删除这个网络
    name: grafana

volumes:
  redis-storage:
    name: redis-storage
  grafana-storage:
    name: grafana-storage
  tempo-storage:
    name: tempo-storage
  prometheus-storage:
    name: prometheus-storage
  sftp-storage:
    name: sftp-storage

services:
  influxDB:
    image: influxdb:latest
    container_name: influxDB
    restart: always
    deploy:
      resources:
        limits:
          memory: 1g
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: root
      DOCKER_INFLUXDB_INIT_PASSWORD: ${ROOT_PASS}
      DOCKER_INFLUXDB_INIT_ORG: test_org
      DOCKER_INFLUXDB_INIT_BUCKET: test_bucket
      DOCKER_INFLUXDB_INIT_RETENTION: 1w
    ports:
      - 8086:8086

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    deploy:
      resources:
        limits:
          memory: 1g
    volumes:
      - redis-storage:/data
    ports:
      - 6379:6379

  mysql:
    image: mysql:latest
    container_name: mysql
    restart: always
    deploy:
      resources:
        limits:
          memory: 1g
    environment:
      MYSQL_ROOT_PASSWORD: ${ROOT_PASS}
      MYSQL_DATABASE: test_db
      MYSQL_USER: ckk
      MYSQL_PASSWORD: ${ROOT_PASS}
    ports:
      - 3306:3306

  # 本地测试部署单服务节点即可
  # 官方推荐使用host网络，降低网络延迟，但是host网络不支持Windows，因此还是使用bridge
  consul_server:
    image: consul:latest
    container_name: consul_server
    restart: always
    deploy:
      resources:
        limits:
          memory: 1g
    volumes:
      - G:/consul_data:/consul/data
    ports:
      - 8300-8302:8300-8302/tcp
      - 8500:8500/tcp
      - 8600:8600/tcp
      - 8301-8302:8301-8302/udp
      - 8600:8600/udp
    command:
      - agent
      - -server
      - -bind=0.0.0.0 # 节点内部通信服务接口绑定的地址
      - -advertise=${HOST_IP} # 广播给集群中其它节点的本机ip
      - -bootstrap-expect=1 # 期望的服务端节点个数
      - -node=consul-server-1
      - -client=0.0.0.0 # 客户端接口（包括webui）绑定的地址
      - -ui

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    deploy:
      resources:
        limits:
          memory: 1g
    ports:
      - 15672:15672
      - 5672:5672
    environment:
      - RABBITMQ_DEFAULT_USER=ckk
      - RABBITMQ_DEFAULT_PASS=${ROOT_PASS}

  traefik:
    image: traefik:latest
    container_name: traefik
    restart: always
    networks:
      - traefik
      - grafana
    deploy:
      resources:
        limits:
          memory: 1g
    ports:
      - 8080:8080
      - 80-82:80-82
      - 4043-4048:4043-4048
    volumes:
      - ./config/traefik/traefik.yaml:/etc/traefik/traefik.yml
      - /var/run/docker.sock:/var/run/docker.sock # 用于docker-provider
      - ./config/traefik/fileprovider:/mnt/data/traefik/fileprovider # 用于file-provider

  grafana:
    image: grafana/grafana-enterprise:latest
    container_name: grafana
    restart: always
    deploy:
      resources:
        limits:
          memory: 1g
    networks:
      - grafana
    ports:
      - 3000:3000
    volumes:
      - grafana-storage:/var/lib/grafana

  # trace backend
  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    restart: always
    deploy:
      resources:
        limits:
          memory: 1g
    networks:
      - grafana
    volumes:
      - ./config/tempo/tempo.yaml:/etc/tempo.yaml
      - tempo-storage:/tmp/tempo
    command:
      - -config.file=/etc/tempo.yaml

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    container_name: otel-collector
    restart: always
    deploy:
      resources:
        limits:
          memory: 1g
    networks:
      - grafana
    volumes:
      - ./config/otel-collector/config.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - 1777:1777 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension

  # 对接Loki的pipeline组件
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    restart: always
    deploy:
      resources:
        limits:
          memory: 1g
    networks:
      - grafana
    ports:
      - 9080:9080 # 暴露ui界面
    volumes:
      - ./config/promtail/:/etc/promtail
    command:
      - -print-config-stderr
      - -config.file=/etc/promtail/config.yaml

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - 9090:9090
    deploy:
      resources:
        limits:
          memory: 1g
    command:
      - --config.file=/etc/prometheus/prometheus.yaml # specify config file
      - --storage.tsdb.path=/prometheus # specify storage path
      - --storage.tsdb.retention.time=1w # 数据保持时间
      - --web.enable-lifecycle # 允许热加载配置文件和告警规则文件
    volumes:
      - ./config/prometheus:/etc/prometheus
      - prometheus-storage:/prometheus

  jaeger-aio:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger-aio
    restart: always
    deploy:
      resources:
        limits:
          memory: 1g
    ports:
      - 16686:16686 # dashboard
      - 4317:4317 # otlp-grpc
      - 4318:4318 # otlp-http
    environment:
      COLLECTOR_OTLP_ENABLED: true

  sftp:
    image: atmoz/sftp:latest
    container_name: sftp
    restart: always
    deploy:
      resources:
        limits:
          memory: 1g
    ports:
      - 2222:22/tcp
    volumes:
      - C:/users/ckk/.ssh/id_rsa:/etc/ssh/ssh_host_rsa_key:ro # 和主机私钥保持一致，否则每次创建容器私钥会变更
      - C:/users/ckk/.ssh/id_ed25519:/etc/ssh/ssh_host_ed25519_key:ro
      - sftp-storage:/home
    command:
      - ckk:my-root-password:::upload # 使用默认uid/gid，文件上传到子目录`upload`
